{"version":3,"file":"main.ad881b6861cdd67ad003.hot-update.js","sources":["webpack:///./src/stories/RadioButton.stories.jsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react'\\n\\nimport { RadioButton } from './components/RadioButton';\\nimport { STORYBOOK_CATEGORIES } from 'elements/storybook.categories';\\nimport { useArgs } from '@storybook/api';\\n\\n\\nexport default {\\n    title: 'Components/RadioButton',\\n    component: RadioButton,\\n    onClick: { action: 'clicked' },\\n    argTypes: {\\n      isDisabled: {\\n        options: [true, false],\\n        control: {type: 'radio'},\\n        default: false,\\n      },\\n      onClick: {\\n        control: 'func',\\n        table: {\\n          category: STORYBOOK_CATEGORIES.EVENTS,\\n        },\\n      },\\n    },\\n};\\n\\nconst Template = (args) => {\\n  const [_, updateArgs] = useArgs();\\n  const handle = (e, f) => {\\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\\n    // As you see I am updating list of options with new state here\\n        console.log(e, f);\\n        updateArgs({ ...args, options: e });\\n      };\\n  return (<RadioButton {...args} onClick={handle}/>);\\n}\\n\\nexport const Primary = Template.bind();\\nPrimary.args = {\\n  groupName:\\\"\\\",\\n  value:\\\"button1\\\",\\n  label:\\\"Label 1\\\",\\n  isDisabled:false,\\n  isChecked: false,\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":27},\"endLoc\":{\"col\":1,\"line\":36},\"startBody\":{\"col\":17,\"line\":27},\"endBody\":{\"col\":1,\"line\":36}}};\n    \nimport React from 'react'\n\nimport { RadioButton } from './components/RadioButton';\nimport { STORYBOOK_CATEGORIES } from 'elements/storybook.categories';\nimport { useArgs } from '@storybook/api';\n\n\nexport default {\n    title: 'Components/RadioButton',\n    component: RadioButton,\n    onClick: { action: 'clicked' },\n    argTypes: {\n      isDisabled: {\n        options: [true, false],\n        control: {type: 'radio'},\n        default: false,\n      },\n      onClick: {\n        control: 'func',\n        table: {\n          category: STORYBOOK_CATEGORIES.EVENTS,\n        },\n      },\n    },\n};\n\nconst Template = (args) => {\n  const [_, updateArgs] = useArgs();\n  const handle = (e, f) => {\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\n    // As you see I am updating list of options with new state here\n        console.log(e, f);\n        updateArgs({ ...args, options: e });\n      };\n  return (<RadioButton {...args} onClick={handle}/>);\n}\n\nexport const Primary = Template.bind();\nPrimary.args = {\n  groupName:\"\",\n  value:\"button1\",\n  label:\"Label 1\",\n  isDisabled:false,\n  isChecked: false,\n}\n\n\nPrimary.parameters = { storySource: { source: \"(args) => {\\n  const [_, updateArgs] = useArgs();\\n  const handle = (e, f) => {\\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\\n    // As you see I am updating list of options with new state here\\n        console.log(e, f);\\n        updateArgs({ ...args, options: e });\\n      };\\n  return (<RadioButton {...args} onClick={handle}/>);\\n}\" }, ...Primary.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAHA;AAKA;AACA;AACA;AACA;AADA;AAFA;AANA;AAJA;AACA;AAkBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAVA;AACA;;;AADA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}