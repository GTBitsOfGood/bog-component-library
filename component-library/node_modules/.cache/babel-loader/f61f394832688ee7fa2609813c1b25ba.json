{"ast":null,"code":"var _jsxFileName = \"/Users/spalathingal/Desktop/bog-component-library/src/stories/components/Checkbox.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/checkbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checkbox = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  const {\n    label,\n    isDisabled,\n    isIndeterminate,\n    hasLabel,\n    onChange,\n    inputRef = ref\n  } = props;\n  const classes = \"checkbox\" + (isDisabled ? \"-disabled\" : \"\") + (isIndeterminate ? \"-indeterminate\" : \"\") + (hasLabel ? \"-hasLabel\" : \"\");\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"checkbox\",\n      className: classes,\n      type: \"checkbox\",\n      disabled: isDisabled,\n      ref: el => {\n        if (el) {\n          el.indeterminate = isIndeterminate;\n        }\n\n        if (typeof inputRef === 'function') {\n          inputRef(el);\n        } else if (Object(inputRef) === inputRef) {\n          inputRef.current = el;\n        }\n      },\n      onChange: onChange,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"checkmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), hasLabel && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"labelText\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n});\n_c2 = Checkbox;\nCheckbox.propTypes = {\n  label: PropTypes.string,\n  hasLabel: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isIndeterminate: PropTypes.bool,\n  onChange: PropTypes.func\n};\nCheckbox.defaultProps = {\n  label: \"Label\",\n  hasLabel: false,\n  isDisabled: false,\n  isIndeterminate: false,\n  onChange: undefined\n};\nCheckbox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Checkbox\",\n  \"props\": {\n    \"label\": {\n      \"defaultValue\": {\n        \"value\": \"\\\"Label\\\"\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasLabel\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDisabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isIndeterminate\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"defaultValue\": {\n        \"value\": \"undefined\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default Checkbox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Checkbox$React.forwardRef\");\n$RefreshReg$(_c2, \"Checkbox\");\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/stories/components/Checkbox.jsx\"] = {\n    name: \"Checkbox\",\n    docgenInfo: Checkbox.__docgenInfo,\n    path: \"src/stories/components/Checkbox.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/spalathingal/Desktop/bog-component-library/src/stories/components/Checkbox.jsx"],"names":["React","PropTypes","Checkbox","forwardRef","props","ref","label","isDisabled","isIndeterminate","hasLabel","onChange","inputRef","classes","el","indeterminate","Object","current","propTypes","string","bool","func","defaultProps","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,qBAAP;;AAEA,MAAMC,QAAQ,gBAAGF,KAAK,CAACG,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC9C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,eAArB;AAAsCC,IAAAA,QAAtC;AAAgDC,IAAAA,QAAhD;AAA0DC,IAAAA,QAAQ,GAAGN;AAArE,MAA6ED,KAAnF;AACA,QAAMQ,OAAO,GAAG,cAAcL,UAAU,GAAG,WAAH,GAAiB,EAAzC,KAAgDC,eAAe,GAAG,gBAAH,GAAsB,EAArF,KAA4FC,QAAQ,GAAG,WAAH,GAAiB,EAArH,CAAhB;AACA,sBACI;AAAO,IAAA,SAAS,EAAC,WAAjB;AAAA,4BACE;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,SAAS,EAAEG,OAFb;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,QAAQ,EAAEL,UAJZ;AAKE,MAAA,GAAG,EAAGM,EAAD,IAAQ;AACX,YAAIA,EAAJ,EAAQ;AACNA,UAAAA,EAAE,CAACC,aAAH,GAAmBN,eAAnB;AACD;;AACD,YAAI,OAAOG,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,UAAAA,QAAQ,CAACE,EAAD,CAAR;AACD,SAFD,MAEO,IAAIE,MAAM,CAACJ,QAAD,CAAN,KAAqBA,QAAzB,EAAmC;AACxCA,UAAAA,QAAQ,CAACK,OAAT,GAAmBH,EAAnB;AACD;AACF,OAdH;AAeE,MAAA,QAAQ,EAAEH,QAfZ;AAAA,SAgBMN;AAhBN;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAnBF,EAoBGK,QAAQ,iBAAI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BH;AAA7B;AAAA;AAAA;AAAA;AAAA,YApBf;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA3BgB,CAAjB;MAAMJ,Q;AA6BNA,QAAQ,CAACe,SAAT,GAAqB;AACjBX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,MADA;AAEjBT,EAAAA,QAAQ,EAAER,SAAS,CAACkB,IAFH;AAGjBZ,EAAAA,UAAU,EAAEN,SAAS,CAACkB,IAHL;AAIjBX,EAAAA,eAAe,EAAEP,SAAS,CAACkB,IAJV;AAKjBT,EAAAA,QAAQ,EAAET,SAAS,CAACmB;AALH,CAArB;AAQAlB,QAAQ,CAACmB,YAAT,GAAwB;AACpBf,EAAAA,KAAK,EAAE,OADa;AAEpBG,EAAAA,QAAQ,EAAE,KAFU;AAGpBF,EAAAA,UAAU,EAAE,KAHQ;AAIpBC,EAAAA,eAAe,EAAE,KAJG;AAKpBE,EAAAA,QAAQ,EAAEY;AALU,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,eAAepB,QAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../css/checkbox.css'\n\nconst Checkbox = React.forwardRef((props, ref) => {\n    const { label, isDisabled, isIndeterminate, hasLabel, onChange, inputRef = ref } = props\n    const classes = \"checkbox\" + (isDisabled ? \"-disabled\" : \"\") + (isIndeterminate ? \"-indeterminate\" : \"\") + (hasLabel ? \"-hasLabel\" : \"\")\n    return (\n        <label className=\"container\">\n          <input \n            id=\"checkbox\" \n            className={classes} \n            type=\"checkbox\" \n            disabled={isDisabled} \n            ref={(el) => {\n              if (el) {\n                el.indeterminate = isIndeterminate;\n              }\n              if (typeof inputRef === 'function') {\n                inputRef(el);\n              } else if (Object(inputRef) === inputRef) {\n                inputRef.current = el;\n              }\n            }}\n            onChange={onChange} \n            {...props}\n          />\n          <span className=\"checkmark\"></span>\n          {hasLabel && <span className=\"labelText\">{label}</span>}\n        </label>\n      );\n});\n\nCheckbox.propTypes = {\n    label: PropTypes.string,\n    hasLabel: PropTypes.bool,\n    isDisabled: PropTypes.bool,\n    isIndeterminate: PropTypes.bool,\n    onChange: PropTypes.func,  \n}\n\nCheckbox.defaultProps = {\n    label: \"Label\",\n    hasLabel: false,\n    isDisabled: false,\n    isIndeterminate: false,\n    onChange: undefined,\n}\n\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}