{"ast":null,"code":"var _jsxFileName = \"/Users/spalathingal/Desktop/bog-component-library/src/stories/RadioButton.stories.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\n\\nimport { RadioButton } from './components/RadioButton';\\nimport { STORYBOOK_CATEGORIES } from 'elements/storybook.categories';\\nimport { useArgs } from '@storybook/api';\\n\\n\\nexport default {\\n    title: 'Components/RadioButton',\\n    component: RadioButton,\\n    onClick: { action: 'clicked' },\\n    argTypes: {\\n      isDisabled: {\\n        options: [true, false],\\n        control: {type: 'radio'},\\n        default: false,\\n      },\\n      onClick: {\\n        control: 'func',\\n        table: {\\n          category: STORYBOOK_CATEGORIES.EVENTS,\\n        },\\n      },\\n    },\\n};\\n\\nconst Template = (args) => {\\n  const [_, updateArgs] = useArgs();\\n  const handle = (e, f) => {\\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\\n    // As you see I am updating list of options with new state here\\n        console.log(e, f);\\n        updateArgs({ ...args, options: e });\\n      };\\n  return (<RadioButton {...args} onClick={handle}/>);\\n}\\n\\nexport const Primary = Template.bind();\\nPrimary.args = {\\n  groupName:\\\"\\\",\\n  value:\\\"button1\\\",\\n  label:\\\"Label 1\\\",\\n  isDisabled:false,\\n  isChecked: false,\\n}\"; // @ts-ignore\n\nvar __LOCATIONS_MAP__ = {\n  \"Primary\": {\n    \"startLoc\": {\n      \"col\": 17,\n      \"line\": 27\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 36\n    },\n    \"startBody\": {\n      \"col\": 17,\n      \"line\": 27\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 36\n    }\n  }\n};\nimport React from 'react';\nimport { RadioButton } from './components/RadioButton';\nimport { STORYBOOK_CATEGORIES } from 'elements/storybook.categories';\nimport { useArgs } from '@storybook/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Components/RadioButton',\n  component: RadioButton,\n  onClick: {\n    action: 'clicked'\n  },\n  argTypes: {\n    isDisabled: {\n      options: [true, false],\n      control: {\n        type: 'radio'\n      },\n      default: false\n    },\n    onClick: {\n      control: 'func',\n      table: {\n        category: STORYBOOK_CATEGORIES.EVENTS\n      }\n    }\n  }\n};\n\nconst Template = args => {\n  _s();\n\n  const [_, updateArgs] = useArgs();\n\n  const handle = (e, f) => {\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\n    // As you see I am updating list of options with new state here\n    console.log(e, f);\n    updateArgs({ ...args,\n      options: e\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(RadioButton, { ...args,\n    onClick: handle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Template, \"TdwkhAyo1PnybJ8m2kR9vva35u0=\", false, function () {\n  return [useArgs];\n});\n\n_c = Template;\nexport const Primary = Template.bind();\nPrimary.args = {\n  groupName: \"\",\n  value: \"button1\",\n  label: \"Label 1\",\n  isDisabled: false,\n  isChecked: false\n};\nPrimary.parameters = {\n  storySource: {\n    source: \"(args) => {\\n  const [_, updateArgs] = useArgs();\\n  const handle = (e, f) => {\\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\\n    // As you see I am updating list of options with new state here\\n        console.log(e, f);\\n        updateArgs({ ...args, options: e });\\n      };\\n  return (<RadioButton {...args} onClick={handle}/>);\\n}\"\n  },\n  ...Primary.parameters\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"sources":["/Users/spalathingal/Desktop/bog-component-library/src/stories/RadioButton.stories.jsx"],"names":["__STORY__","__LOCATIONS_MAP__","React","RadioButton","STORYBOOK_CATEGORIES","useArgs","title","component","onClick","action","argTypes","isDisabled","options","control","type","default","table","category","EVENTS","Template","args","_","updateArgs","handle","e","f","console","log","Primary","bind","groupName","value","label","isChecked","parameters","storySource","source"],"mappings":";;;AACI;AACA;AACA;AACA,IAAIA,SAAS,GAAG,6tCAAhB,C,CACA;;AACA,IAAIC,iBAAiB,GAAG;AAAC,aAAU;AAAC,gBAAW;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAAZ;AAAiC,cAAS;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB,KAA1C;AAA8D,iBAAY;AAAC,aAAM,EAAP;AAAU,cAAO;AAAjB,KAA1E;AAA+F,eAAU;AAAC,aAAM,CAAP;AAAS,cAAO;AAAhB;AAAzG;AAAX,CAAxB;AAEJ,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,oBAAT,QAAqC,+BAArC;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAGA,eAAe;AACXC,EAAAA,KAAK,EAAE,wBADI;AAEXC,EAAAA,SAAS,EAAEJ,WAFA;AAGXK,EAAAA,OAAO,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAHE;AAIXC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,CAAC,IAAD,EAAO,KAAP,CADC;AAEVC,MAAAA,OAAO,EAAE;AAACC,QAAAA,IAAI,EAAE;AAAP,OAFC;AAGVC,MAAAA,OAAO,EAAE;AAHC,KADJ;AAMRP,IAAAA,OAAO,EAAE;AACPK,MAAAA,OAAO,EAAE,MADF;AAEPG,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAEb,oBAAoB,CAACc;AAD1B;AAFA;AAND;AAJC,CAAf;;AAmBA,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAAA;;AACzB,QAAM,CAACC,CAAD,EAAIC,UAAJ,IAAkBjB,OAAO,EAA/B;;AACA,QAAMkB,MAAM,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACvB;AACA;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ,EAAeC,CAAf;AACAH,IAAAA,UAAU,CAAC,EAAE,GAAGF,IAAL;AAAWR,MAAAA,OAAO,EAAEY;AAApB,KAAD,CAAV;AACD,GALL;;AAMA,sBAAQ,QAAC,WAAD,OAAiBJ,IAAjB;AAAuB,IAAA,OAAO,EAAEG;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,CATD;;GAAMJ,Q;UACoBd,O;;;KADpBc,Q;AAWN,OAAO,MAAMS,OAAO,GAAGT,QAAQ,CAACU,IAAT,EAAhB;AACPD,OAAO,CAACR,IAAR,GAAe;AACbU,EAAAA,SAAS,EAAC,EADG;AAEbC,EAAAA,KAAK,EAAC,SAFO;AAGbC,EAAAA,KAAK,EAAC,SAHO;AAIbrB,EAAAA,UAAU,EAAC,KAJE;AAKbsB,EAAAA,SAAS,EAAE;AALE,CAAf;AASAL,OAAO,CAACM,UAAR,GAAqB;AAAEC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAf;AAAyd,KAAGR,OAAO,CAACM;AAApe,CAArB","sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react'\\n\\nimport { RadioButton } from './components/RadioButton';\\nimport { STORYBOOK_CATEGORIES } from 'elements/storybook.categories';\\nimport { useArgs } from '@storybook/api';\\n\\n\\nexport default {\\n    title: 'Components/RadioButton',\\n    component: RadioButton,\\n    onClick: { action: 'clicked' },\\n    argTypes: {\\n      isDisabled: {\\n        options: [true, false],\\n        control: {type: 'radio'},\\n        default: false,\\n      },\\n      onClick: {\\n        control: 'func',\\n        table: {\\n          category: STORYBOOK_CATEGORIES.EVENTS,\\n        },\\n      },\\n    },\\n};\\n\\nconst Template = (args) => {\\n  const [_, updateArgs] = useArgs();\\n  const handle = (e, f) => {\\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\\n    // As you see I am updating list of options with new state here\\n        console.log(e, f);\\n        updateArgs({ ...args, options: e });\\n      };\\n  return (<RadioButton {...args} onClick={handle}/>);\\n}\\n\\nexport const Primary = Template.bind();\\nPrimary.args = {\\n  groupName:\\\"\\\",\\n  value:\\\"button1\\\",\\n  label:\\\"Label 1\\\",\\n  isDisabled:false,\\n  isChecked: false,\\n}\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":27},\"endLoc\":{\"col\":1,\"line\":36},\"startBody\":{\"col\":17,\"line\":27},\"endBody\":{\"col\":1,\"line\":36}}};\n    \nimport React from 'react'\n\nimport { RadioButton } from './components/RadioButton';\nimport { STORYBOOK_CATEGORIES } from 'elements/storybook.categories';\nimport { useArgs } from '@storybook/api';\n\n\nexport default {\n    title: 'Components/RadioButton',\n    component: RadioButton,\n    onClick: { action: 'clicked' },\n    argTypes: {\n      isDisabled: {\n        options: [true, false],\n        control: {type: 'radio'},\n        default: false,\n      },\n      onClick: {\n        control: 'func',\n        table: {\n          category: STORYBOOK_CATEGORIES.EVENTS,\n        },\n      },\n    },\n};\n\nconst Template = (args) => {\n  const [_, updateArgs] = useArgs();\n  const handle = (e, f) => {\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\n    // As you see I am updating list of options with new state here\n        console.log(e, f);\n        updateArgs({ ...args, options: e });\n      };\n  return (<RadioButton {...args} onClick={handle}/>);\n}\n\nexport const Primary = Template.bind();\nPrimary.args = {\n  groupName:\"\",\n  value:\"button1\",\n  label:\"Label 1\",\n  isDisabled:false,\n  isChecked: false,\n}\n\n\nPrimary.parameters = { storySource: { source: \"(args) => {\\n  const [_, updateArgs] = useArgs();\\n  const handle = (e, f) => {\\n    // inside this function I am updating arguments, but you can call it anywhere according to your demand, the key solution here is using `useArgs()`\\n    // As you see I am updating list of options with new state here\\n        console.log(e, f);\\n        updateArgs({ ...args, options: e });\\n      };\\n  return (<RadioButton {...args} onClick={handle}/>);\\n}\" }, ...Primary.parameters };"]},"metadata":{},"sourceType":"module"}