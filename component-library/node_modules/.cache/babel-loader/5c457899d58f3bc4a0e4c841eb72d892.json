{"ast":null,"code":"var _jsxFileName = \"/Users/spalathingal/Desktop/bog-component-library/src/components/WeatherCard.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/weatherCard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTint, faWind, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherCard = ({\n  temperature,\n  temperatureMeasure,\n  updateTime,\n  humidity,\n  windspeed,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weatherCardContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoButtonContainer\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faInfoCircle,\n        className: \"infoButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tempAndTime\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temp\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"degree\",\n          children: [temperature, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"symbol\",\n          children: [\"\\xB0\", temperatureMeasure]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: [\"Updated: \", updateTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"humidityAndWind\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"humidity\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTint,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), humidity, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wind\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faWind,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), windspeed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = WeatherCard;\nWeatherCard.propTypes = {\n  /** Current Temperature */\n  temperature: PropTypes.number.isRequired,\n  temperatureMeasure: PropTypes.string,\n  updateTime: PropTypes.string,\n  humidity: PropTypes.number,\n  windspeed: PropTypes.number\n};\nWeatherCard.defaultProps = {\n  temperature: 0,\n  temperatureMeasure: \"C\",\n  updateTime: \"00:00\",\n  humidity: 0,\n  windspeed: 0\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherCard\");\nWeatherCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"WeatherCard\",\n  \"props\": {\n    \"temperature\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"Current Temperature\"\n    },\n    \"temperatureMeasure\": {\n      \"defaultValue\": {\n        \"value\": \"\\\"C\\\"\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"updateTime\": {\n      \"defaultValue\": {\n        \"value\": \"\\\"00:00\\\"\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"humidity\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"windspeed\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/WeatherCard.jsx\"] = {\n    name: \"WeatherCard\",\n    docgenInfo: WeatherCard.__docgenInfo,\n    path: \"src/components/WeatherCard.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/spalathingal/Desktop/bog-component-library/src/components/WeatherCard.jsx"],"names":["React","PropTypes","FontAwesomeIcon","faTint","faWind","faInfoCircle","WeatherCard","temperature","temperatureMeasure","updateTime","humidity","windspeed","props","propTypes","number","isRequired","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,wBAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,YAAzB,QAA6C,mCAA7C;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,kBAAf;AAAmCC,EAAAA,UAAnC;AAA+CC,EAAAA,QAA/C;AAAyDC,EAAAA,SAAzD;AAAoE,KAAGC;AAAvE,CAAD,KAAoF;AAE3G,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BAEI,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEP,YAAvB;AAAqC,QAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,qBAAyBE,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,6BAA0BC,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACcC,UADd;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAgBI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEN,MAAvB;AAA+B,UAAA,SAAS,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKO,QAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEN,MAAvB;AAA+B,UAAA,SAAS,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKO,SAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA/BM;KAAML,W;AAiCbA,WAAW,CAACO,SAAZ,GAAwB;AAEpB;AACAN,EAAAA,WAAW,EAAEN,SAAS,CAACa,MAAV,CAAiBC,UAHV;AAKpBP,EAAAA,kBAAkB,EAAEP,SAAS,CAACe,MALV;AAOpBP,EAAAA,UAAU,EAAER,SAAS,CAACe,MAPF;AASpBN,EAAAA,QAAQ,EAAET,SAAS,CAACa,MATA;AAWpBH,EAAAA,SAAS,EAAEV,SAAS,CAACa;AAXD,CAAxB;AAeAR,WAAW,CAACW,YAAZ,GAA2B;AACvBV,EAAAA,WAAW,EAAE,CADU;AAEvBC,EAAAA,kBAAkB,EAAE,GAFG;AAGvBC,EAAAA,UAAU,EAAE,OAHW;AAIvBC,EAAAA,QAAQ,EAAE,CAJa;AAKvBC,EAAAA,SAAS,EAAE;AALY,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/weatherCard.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faWind, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const WeatherCard = ({ temperature, temperatureMeasure, updateTime, humidity, windspeed, ...props }) => {\n\n    return (\n        <div className=\"weatherCardContainer\">\n            <div className=\"infoButtonContainer\">\n\n                <FontAwesomeIcon icon={faInfoCircle} className=\"infoButton\"/>               \n            </div>\n\n            <div className=\"tempAndTime\">\n                <div className=\"temp\">\n                    <div className=\"degree\">{temperature}  </div>\n                    <div className=\"symbol\">Â°{temperatureMeasure}</div>\n                </div>\n                <div className=\"time\"> \n                    Updated: {updateTime} \n                </div>\n            </div>\n\n            <div className=\"humidityAndWind\">\n                <div className=\"humidity\">\n                    <FontAwesomeIcon icon={faTint} className=\"icon\"/>\n                    {humidity} %\n                </div>\n                <div className=\"wind\">\n                    <FontAwesomeIcon icon={faWind} className=\"icon\"/>\n                    {windspeed} km/h \n                </div>\n            </div>\n        </div>\n    );\n};\n\nWeatherCard.propTypes = {\n\n    /** Current Temperature */\n    temperature: PropTypes.number.isRequired,\n\n    temperatureMeasure: PropTypes.string,\n\n    updateTime: PropTypes.string,\n\n    humidity: PropTypes.number,\n\n    windspeed: PropTypes.number,\n\n};\n\nWeatherCard.defaultProps = {\n    temperature: 0,\n    temperatureMeasure: \"C\",\n    updateTime: \"00:00\",\n    humidity: 0,\n    windspeed: 0,\n}"]},"metadata":{},"sourceType":"module"}